# -*- encoding : utf-8 -*-
require "max_crm"

module MaxCrm
  class Template
    class << self
      def push(tenant_name = nil)
        if !tenant_name.nil? && template_file_for_tenant?(tenant_name)
          push_contents_from_template_to_crm(tenant_name)
        else
          raise ArgumentError, "No template config file found for specified tenant"
        end
      end

      private

      def templates_filepath
        Rails.root + "config/web_crm/templates/"
      end

      def template_filename(tenant_name)
        tenant_name.underscore + "_template.rb"
      end

      def template_file_for_tenant?(tenant_name)
        File.exists?(templates_filepath + template_filename(tenant_name))
      end

      def push_contents_from_template_to_crm(tenant_name)
        require templates_filepath + template_filename(tenant_name)
        klass = template_filename(tenant_name).gsub(".rb", "").classify.constantize
        tenant_not_equal_error unless tenant_name == klass::TENANT
        push_class_with_contents(klass)
      end

      def tenant_not_equal_error
        raise NameError, "Specified tenant in config file does not match with the filename"
      end

      def push_class_with_contents(klass)
        Tenant.set(klass::TENANT)
        begin
          Infopark::Crm::System.templates=(klass.contents)
          puts "Updated templates config for tenant `#{klass::TENANT}` successfully"
        rescue Exception => e
          raise e
        end
      end
    end
  end
end
